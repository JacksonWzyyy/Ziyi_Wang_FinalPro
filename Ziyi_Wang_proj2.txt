Ziyi Wang
DSCI 510
Project Milestone2
4/13/2024

1.What are the strengths of your data modeling format?
First and foremost, I ended up with the dataset I wanted, and my data model effectively integrates multiple datasets. This included MVP's rating results along with their data, 2022-2023 salaries, and team performance, and by merging these datasets it was possible to analyze how different aspects of player performance, salary, and team dynamics interacted with each other in greater detail. I could explore the correlation between a player's salary and their performance metrics, or the relationship between individual accomplishments (e.g. MVP awards) and team success. And it can be adapted or expanded as new data becomes available, for example, if new season data or other variables (player efficiency or minutes per game stats) become available, they can be seamlessly integrated into your existing data model without major reorganization.
I use Panda, which automatically aligns data based on labels. This is very useful when combining multiple datasets, as it ensures that data from different sources is correctly matched according to the keys you specify, such as "player" and "year" in my case. are correctly matched. Also, if I want to edit some information, it is easy to use. Next, I can use panda to clean and analyze the data.
2.What are the weaknesses?  (Does your data model support?  Sorting the information? Re-ordering it?  Only obtaining a certain subset of the information?)  
My model is pretty good when it comes to sorting, rearranging, and grabbing exactly the chunk of data I need. I can easily sort by any column, shuffle columns around to make the data easier to read, or pull out just the part of the data I'm interested in. This makes it super handy for getting a quick overview or diving deep into something specific. But, just a heads-up, it does get a bit sluggish with really big data sets or when I need things done in real-time.

3.How do you store your data on disk?
　　For storing my data on disk after processing and analysis, I primarily use CSV file.
To integrate my data for analysis, I first merged the salary dataset and the MVP voting results into one dataset called merged_mvps_salary.csv using "player" and "year" as keys. I then merged this with the NBA team data using "team" and "year" to directly link player salary and performance metrics to the results of the corresponding team in the same year. This approach allows for a comprehensive analysis of individual and team performance. After merging, I save the entire dataset as " final_merged_data.csv " using the Pandas ‘to_csv’ function, ensuring that the data is available for further analysis and does not contain row indexes for easier manipulation in software such as Excel. 
4.Let’s say you find another data source that relates to all 3 of your data sources (i.e. a data source that relates to your existing data).  How would you extend your model to include this new data source?  How would that change the interface? 
To integrate a new data source related to an existing salary, MVP voting, and NBA team performance dataset, I would first evaluate its structure to identify common keys for merging, such as "player" or "year". Using Pandas, I would merge this new data with the existing merged dataset, ensuring alignment based on the phase key. This process may involve updating data cleaning and processing steps to accommodate additional data types or fields. The user interface will also be updated to include new data visualization or filtering options to enhance user interaction and accessibility of new insights. Overall, this extension will enrich the analytical capabilities of the model and provide more comprehensive data insights.

5.How would you add a new attribute to your data (for example: imagine you had a lat/long column in a database.  You might use that to access an API to get a city name.  How would you add city name to your data?)  
If I add a new attribute to my data, I definitely can do that. For example,
to add a new attribute like "Player Efficiency Rating (PER)" to my combined dataset, I'd start by finding a reliable source that offers PER data for each player, such as a sports analytics API or a detailed dataset available online. I'd import this data into my analysis environment using Pandas, typically from a CSV file. Once imported, I'd merge this new attribute into my existing dataset, aligning it by 'Player' and 'Year' to ensure it matches up with the existing salary, MVP, and team performance data. This merge would effectively add PER as a new column, enriching my dataset and broadening the scope of my analysis. After merging, I’d meticulously check for any inconsistencies or missing values within the PER data, applying necessary data cleaning or imputation techniques to maintain data integrity. Finally, I'd save this updated dataset to a CSV file, ensuring that all the new and enhanced information is preserved and ready for further analysis or reporting, allowing for deeper insights into how player efficiency influences or correlates with other performance metrics and financial attributes.